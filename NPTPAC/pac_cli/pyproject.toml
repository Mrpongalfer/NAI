[tool.poetry]
name = "npac-cli"
version = "0.1.0"
description = "Nexus Prompt Assembler CLI (PAC) - Omnitide Nexus Protocol Toolkit Interface"
authors = ["The Architect <architect@omnitide.nexus>"] # Placeholder
license = "Proprietary" # Or MIT, Apache-2.0, etc. if open-sourcing PAC
readme = "README.md"
packages = [{ include = "app", from = "." }]

[tool.poetry.dependencies]
python = "^3.10"
typer = {extras = ["all"], version = ">=0.9.0,<0.13.0"}
rich = ">=13.0.0,<14.0.0"
pyyaml = ">=6.0,<7.0"
# Agent dependencies will be added by the generator
httpx = ">=0.20.0,<0.28.0"
requests = ">=2.20.0,<3.0.0"
tomli = ">=1.0.0,<3.0.0; python_version < '3.11'"
# python-dotenv = ">=0.20.0,<1.1.0" # Uncomment if PAC uses .env for its own config
# sentry-sdk = ">=1.0.0,<2.0.0" # Optional for error tracking

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0,<8.0.0"
pytest-cov = ">=4.0.0,<5.0.0"
# ruff = ">=0.1.0" # Ruff can be installed globally or managed by pre-commit

[tool.poetry.scripts]
npac = "app.main:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
select = ["E", "W", "F", "I", "C", "B", "Q"] # Example selections
ignore = ["E501"] # Example: ignore line too long if necessary

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=app --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"